- name: Setup KinD Cluster com Cilium, MetalLB, Metrics Server, ArgoCD e Ingress
  hosts: localhost
  gather_facts: false
  vars:
    metallb_ip_start: "255.150"
    metallb_ip_end: "255.170"
    metallb_config_path: "./metallb-config.yaml"

  tasks:
    - name: Checa se o kind está instalado
      command: which kind
      register: kind_check
      failed_when: kind_check.rc != 0

    - name: Checa se o helm está instalado
      command: which helm
      register: helm_check
      failed_when: helm_check.rc != 0

    - name: Checa se o kubectl está instalado
      command: which kubectl
      register: kubectl_check
      failed_when: kubectl_check.rc != 0

    - name: Apaga cluster antigo
      command: kind delete cluster
      ignore_errors: true

    - name: Cria cluster
      command: kind create cluster --config kind.yaml

    - name: Atualiza kubeconfig
      shell: kind get kubeconfig > ~/.kube/config

    - name: Instala Cilium
      shell: |
        helm upgrade --install --namespace kube-system --repo https://helm.cilium.io cilium cilium --values - <<EOF
        kubeProxyReplacement: true
        k8sServiceHost: kind-control-plane
        k8sServicePort: 6443
        hostServices:
          enabled: false
        externalIPs:
          enabled: true
        nodePort:
          enabled: true
        hostPort:
          enabled: true
        image:
          pullPolicy: IfNotPresent
        ipam:
          mode: kubernetes
        hubble:
          enabled: true
        EOF

    - name: Instala Cilium CLI
      shell: |
        chmod +x install-cilium-cli.sh
        ./install-cilium-cli.sh

    - name: Instala MetalLB
      command: kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.14.3/config/manifests/metallb-native.yaml

    - name: Aguarda o controller do MetalLB ficar pronto
      command: kubectl rollout status -n metallb-system deployment/controller --timeout=120s

    - name: Descobre o prefixo IPv4 da rede kind
      shell: |
        docker network inspect kind -f '{{range .IPAM.Config}}{{.Subnet}}{{end}}' | grep -Eo '([0-9]{1,3}\.){3}[0-9]{1,3}/[0-9]+' | head -n1 | cut -d'.' -f1-2
      register: kind_prefix
      changed_when: false

    - name: Gera arquivo metallb-config.yaml dinamicamente
      copy:
        dest: "{{ metallb_config_path }}"
        content: |
          apiVersion: metallb.io/v1beta1
          kind: IPAddressPool
          metadata:
            name: metallb-ip-pool
            namespace: metallb-system
          spec:
            addresses:
              - "{{ kind_prefix.stdout }}.{{ metallb_ip_start }}-{{ kind_prefix.stdout }}.{{ metallb_ip_end }}"
          ---
          apiVersion: metallb.io/v1beta1
          kind: L2Advertisement
          metadata:
            name: empty
            namespace: metallb-system

    - name: Aplica configuração do MetalLB
      command: kubectl apply -f {{ metallb_config_path }}

    - name: Instala Metrics Server
      command: kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml

    - name: Cria namespace do ArgoCD
      command: kubectl create namespace argocd
      ignore_errors: true

    - name: Instala ArgoCD
      command: kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

    - name: Instala ingress-nginx
      shell: |
        helm upgrade --install --namespace ingress-nginx --create-namespace --repo https://kubernetes.github.io/ingress-nginx ingress-nginx ingress-nginx --values - <<EOF
        defaultBackend:
          enabled: true
        EOF

    - name: Exibe mensagem de sucesso
      debug:
        msg: "Cluster pronto!"
